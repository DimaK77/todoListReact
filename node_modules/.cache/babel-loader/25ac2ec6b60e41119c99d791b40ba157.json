{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\todoList\\\\my-app\\\\src\\\\UI\\\\todoList\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todoItems, setTodoItems] = useState([]);\n  const [addItem, setAddItem] = useState({});\n\n  const x = () => x = +0;\n\n  const addNewItem = e => {\n    e.preventDefault();\n    setTodoItems([...todoItems, addItem]);\n    setAddItem({}); // console.log(todoItems)\n\n    return todoItems.map(item => {\n      x();\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", item.title, \" \"]\n      }, x, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: addItem.title,\n        onChange: e => setAddItem({ ...addItem,\n          title: e.target.value\n        }),\n        type: \"text\",\n        placeholder: \"\\u0417\\u0430\\u043C\\u0435\\u0442\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewItem(),\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: addNewItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"oyQ1OMW3qF5Rsd2DZBwd2u7voyw=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/React/todoList/my-app/src/UI/todoList/TodoList.jsx"],"names":["React","useState","TodoList","todoItems","setTodoItems","addItem","setAddItem","x","addNewItem","e","preventDefault","map","item","title","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMM,CAAC,GAAG,MAAOA,CAAC,GAAE,CAAC,CAArB;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeE,OAAf,CAAD,CAAZ;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV,CAHsB,CAItB;;AACA,WAAQH,SAAS,CAACQ,GAAV,CAAeC,IAAI,IAAI;AAC3BL,MAAAA,CAAC;AACD,0BAAO;AAAA,wBAAcK,IAAI,CAACC,KAAnB;AAAA,SAASN,CAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHO,CAAR;AAIH,GATD;;AAWA,sBACI;AAAA,4BACI;AACA,MAAA,MAAM,EAAC,EADP;AAAA,8BAII;AACI,QAAA,KAAK,EAAEF,OAAO,CAACQ,KADnB;AAEI,QAAA,QAAQ,EAAIJ,CAAC,IAAIH,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaQ,UAAAA,KAAK,EAAEJ,CAAC,CAACK,MAAF,CAASC;AAA7B,SAAD,CAF/B;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI;AAAQ,QAAA,OAAO,EAAIP,UAAU,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAaQ;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAbR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAjCD;;GAAMN,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst TodoList = () => {\r\n    const [todoItems, setTodoItems] = useState([])\r\n    const [addItem, setAddItem] = useState({})\r\n    const x = () => (x =+0)\r\n\r\n    const addNewItem = (e) => {\r\n        e.preventDefault();\r\n        setTodoItems([...todoItems, addItem])\r\n        setAddItem({})\r\n        // console.log(todoItems)\r\n        return (todoItems.map( item => {\r\n            x()\r\n            return(<li key={x}> {item.title} </li>)       \r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form \r\n            action=\"\"\r\n            \r\n            >\r\n                <input\r\n                    value={addItem.title}\r\n                    onChange = {e => setAddItem({...addItem, title: e.target.value })}\r\n                    type=\"text\" \r\n                    placeholder='Заметка' \r\n                    />\r\n                <button onClick = {addNewItem()}>Создать заметку</button>\r\n                </form>\r\n                <ul>{addNewItem}</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList"]},"metadata":{},"sourceType":"module"}