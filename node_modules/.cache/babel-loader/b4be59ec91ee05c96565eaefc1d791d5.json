{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\todoList\\\\my-app\\\\src\\\\UI\\\\todoList\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport cl from './TodoList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todoItems, setTodoItems] = useState([]);\n  const [addItem, setAddItem] = useState({\n    title: '',\n    id: ''\n  });\n\n  const addNewItem = e => {\n    e.preventDefault();\n    setTodoItems([...todoItems, addItem]);\n    setAddItem({\n      title: '',\n      id: ''\n    });\n  };\n\n  const checked = e => {\n    e.target.checked ? e.target.parentElement.classList = cl.checkbox : e.target.parentElement.classList = '';\n  };\n\n  const delItem = e => {\n    setTodoItems(todoItems.filter(item => String(item.id) !== String(e.target.id)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNewItem,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: addItem.title,\n        type: \"text\",\n        placeholder: \"\\u0417\\u0430\\u043C\\u0435\\u0442\\u043A\\u0430\",\n        onChange: e => setAddItem({ ...addItem,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => setAddItem({ ...addItem,\n          id: Date.now()\n        }),\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"lal\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: item.id,\n          type: \"checkbox\",\n          onClick: checked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), item.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          id: item.id,\n          onClick: delItem,\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"ysot6ij4NFp1ke9prnoY0iM2T4s=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/React/todoList/my-app/src/UI/todoList/TodoList.jsx"],"names":["React","useState","cl","TodoList","todoItems","setTodoItems","addItem","setAddItem","title","id","addNewItem","e","preventDefault","checked","target","parentElement","classList","checkbox","delItem","filter","item","String","value","Date","now","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAQC,EAAR,MAAgB,uBAAhB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC;AAACO,IAAAA,KAAK,EAAG,EAAT;AAAaC,IAAAA,EAAE,EAAG;AAAlB,GAAD,CAAtC;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeE,OAAf,CAAD,CAAZ;AACAC,IAAAA,UAAU,CAAC;AAACC,MAAAA,KAAK,EAAG,EAAT;AAAaC,MAAAA,EAAE,EAAG;AAAlB,KAAD,CAAV;AACH,GAJD;;AAMA,QAAOI,OAAO,GAAIF,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACG,MAAF,CAASD,OAAT,GAAmBF,CAAC,CAACG,MAAF,CAASC,aAAT,CAAuBC,SAAvB,GAAmCd,EAAE,CAACe,QAAzD,GAAoEN,CAAC,CAACG,MAAF,CAASC,aAAT,CAAuBC,SAAvB,GAAmC,EAAvG;AACH,GAFD;;AAIA,QAAME,OAAO,GAAIP,CAAD,IAAO;AACnBN,IAAAA,YAAY,CAACD,SAAS,CAACe,MAAV,CAAiBC,IAAI,IAAKC,MAAM,CAACD,IAAI,CAACX,EAAN,CAAN,KAAoBY,MAAM,CAACV,CAAC,CAACG,MAAF,CAASL,EAAV,CAApD,CAAD,CAAZ;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEC,UAAhB;AAAA,8BACI;AACI,QAAA,KAAK,EAAEJ,OAAO,CAACE,KADnB;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,4CAHhB;AAII,QAAA,QAAQ,EAAIG,CAAC,IAAIJ,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaE,UAAAA,KAAK,EAAEG,CAAC,CAACG,MAAF,CAASQ;AAA7B,SAAD;AAJ/B;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,OAAO,EAAI,MAAMf,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaG,UAAAA,EAAE,EAAEc,IAAI,CAACC,GAAL;AAAjB,SAAD,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAA,gBAAKpB,SAAS,CAACqB,GAAV,CAAcL,IAAI,iBACf;AAAI,QAAA,SAAS,EAAG,KAAhB;AAAA,gCACI;AACI,UAAA,EAAE,EAAIA,IAAI,CAACX,EADf;AAEI,UAAA,IAAI,EAAC,UAFT;AAGI,UAAA,OAAO,EAAII;AAHf;AAAA;AAAA;AAAA;AAAA,gBADJ,EAMCO,IAAI,CAACZ,KANN,eAOI;AACI,UAAA,EAAE,EAAIY,IAAI,CAACX,EADf;AAEI,UAAA,OAAO,EAAES,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AAAL;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CAnDD;;GAAMf,Q;;KAAAA,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport  cl from './TodoList.module.css'\r\n\r\nconst TodoList = () => {\r\n    const [todoItems, setTodoItems] = useState([])\r\n    const [addItem, setAddItem] = useState({title : '', id : ''})\r\n\r\n    const addNewItem = (e) => {\r\n        e.preventDefault();\r\n        setTodoItems([...todoItems, addItem])\r\n        setAddItem({title : '', id : ''})\r\n    }\r\n\r\n    const  checked = (e) => {\r\n        e.target.checked ? e.target.parentElement.classList = cl.checkbox : e.target.parentElement.classList = ''\r\n    }\r\n\r\n    const delItem = (e) => {\r\n        setTodoItems(todoItems.filter(item => (String(item.id) !== String(e.target.id))))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={addNewItem}>\r\n                <input\r\n                    value={addItem.title}\r\n                    type=\"text\" \r\n                    placeholder='Заметка' \r\n                    onChange = {e => setAddItem({...addItem, title: e.target.value})}\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    onClick = {() => setAddItem({...addItem, id: Date.now()})}\r\n                >Создать заметку\r\n                </button>\r\n            </form>\r\n            <ul>{todoItems.map(item => (\r\n                    <li className = 'lal'>\r\n                        <input \r\n                            id = {item.id}\r\n                            type=\"checkbox\"\r\n                            onClick = {checked}\r\n                        />\r\n                    {item.title}\r\n                        <button\r\n                            id = {item.id}\r\n                            onClick={delItem}\r\n                        >\r\n                        Удалить</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList"]},"metadata":{},"sourceType":"module"}