{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\todoList\\\\my-app\\\\src\\\\components\\\\TodoList\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport cl from './todoList.module.css';\nimport { TodoItem } from \"../TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todoItems, setTodoItems] = useState([]); // const [addItem, setAddItem] = useState({title : '', id : '', isChecked : false})\n\n  const addNewItem = e => {\n    e.preventDefault();\n\n    if (addItem.title !== '') {\n      setTodoItems([...todoItems, addItem]);\n      setAddItem({\n        title: '',\n        id: ''\n      });\n    }\n  };\n\n  const checked = e => {\n    e.target.checked ? e.target.parentElement.classList.add(cl.checkbox) : e.target.parentElement.classList.remove(cl.checkbox);\n  };\n\n  const delItem = e => {\n    setTodoItems(todoItems.filter(item => String(item.id) !== String(e.target.id)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cl.main,\n    children: [\"TodoList\", /*#__PURE__*/_jsxDEV(\"form\", {\n      className: cl.header,\n      onSubmit: addNewItem,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: addItem.title,\n        type: \"text\",\n        placeholder: \"\\u0417\\u0430\\u043C\\u0435\\u0442\\u043A\\u0430\",\n        onChange: e => setAddItem({ ...addItem,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => setAddItem({ ...addItem,\n          id: Date.now()\n        }),\n        children: \"\\u25BA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: cl.todo,\n      children: todoItems.map(_ref => {\n        let {\n          id,\n          title,\n          isChecked\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          id: id,\n          title: title,\n          isChecked: isChecked,\n          setTodoItems: setTodoItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"VkLO8RMMXzmRQopFb3CycycwUbM=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/React/todoList/my-app/src/components/TodoList/TodoList.jsx"],"names":["React","useState","cl","TodoItem","TodoList","todoItems","setTodoItems","addNewItem","e","preventDefault","addItem","title","setAddItem","id","checked","target","parentElement","classList","add","checkbox","remove","delItem","filter","item","String","main","header","value","Date","now","todo","map","isChecked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAQC,EAAR,MAAgB,uBAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C,CADmB,CAEnB;;AAEA,QAAMM,UAAU,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGC,OAAO,CAACC,KAAR,KAAkB,EAArB,EAAyB;AACzBL,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeK,OAAf,CAAD,CAAZ;AACAE,MAAAA,UAAU,CAAC;AAACD,QAAAA,KAAK,EAAG,EAAT;AAAaE,QAAAA,EAAE,EAAG;AAAlB,OAAD,CAAV;AACC;AACJ,GAND;;AAQA,QAAMC,OAAO,GAAIN,CAAD,IAAO;AACnBA,IAAAA,CAAC,CAACO,MAAF,CAASD,OAAT,GAAmBN,CAAC,CAACO,MAAF,CAASC,aAAT,CAAuBC,SAAvB,CAAiCC,GAAjC,CAAqChB,EAAE,CAACiB,QAAxC,CAAnB,GAAuEX,CAAC,CAACO,MAAF,CAASC,aAAT,CAAuBC,SAAvB,CAAiCG,MAAjC,CAAwClB,EAAE,CAACiB,QAA3C,CAAvE;AACH,GAFD;;AAIA,QAAME,OAAO,GAAIb,CAAD,IAAO;AACnBF,IAAAA,YAAY,CAACD,SAAS,CAACiB,MAAV,CAAiBC,IAAI,IAAKC,MAAM,CAACD,IAAI,CAACV,EAAN,CAAN,KAAoBW,MAAM,CAAChB,CAAC,CAACO,MAAF,CAASF,EAAV,CAApD,CAAD,CAAZ;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAIX,EAAE,CAACuB,IAArB;AAAA,wCAEI;AACI,MAAA,SAAS,EAAIvB,EAAE,CAACwB,MADpB;AAEI,MAAA,QAAQ,EAAEnB,UAFd;AAAA,8BAII;AACI,QAAA,KAAK,EAAEG,OAAO,CAACC,KADnB;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,4CAHhB;AAII,QAAA,QAAQ,EAAIH,CAAC,IAAII,UAAU,CAAC,EAAC,GAAGF,OAAJ;AAAaC,UAAAA,KAAK,EAAEH,CAAC,CAACO,MAAF,CAASY;AAA7B,SAAD;AAJ/B;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,OAAO,EAAI,MAAMf,UAAU,CAAC,EAAC,GAAGF,OAAJ;AAAaG,UAAAA,EAAE,EAAEe,IAAI,CAACC,GAAL;AAAjB,SAAD,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAmBI;AAAI,MAAA,SAAS,EAAI3B,EAAE,CAAC4B,IAApB;AAAA,gBACKzB,SAAS,CAAC0B,GAAV,CAAc;AAAA,YAAC;AAAElB,UAAAA,EAAF;AAAMF,UAAAA,KAAN;AAAaqB,UAAAA;AAAb,SAAD;AAAA,4BACb,QAAC,QAAD;AAAU,UAAA,EAAE,EAAEnB,EAAd;AAAkB,UAAA,KAAK,EAAEF,KAAzB;AAAgC,UAAA,SAAS,EAAEqB,SAA3C;AAAsD,UAAA,YAAY,EAAE1B;AAApE;AAAA;AAAA;AAAA;AAAA,gBADa;AAAA,OAAd;AADL;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA/CD;;GAAMF,Q;;KAAAA,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport  cl from './todoList.module.css'\r\nimport { TodoItem } from \"../TodoItem\";\r\n\r\nconst TodoList = () => {\r\n    const [todoItems, setTodoItems] = useState([])\r\n    // const [addItem, setAddItem] = useState({title : '', id : '', isChecked : false})\r\n\r\n    const addNewItem = (e) => {\r\n        e.preventDefault()\r\n        if(addItem.title !== '') {\r\n        setTodoItems([...todoItems, addItem])\r\n        setAddItem({title : '', id : ''})\r\n        }\r\n    }\r\n\r\n    const checked = (e) => {\r\n        e.target.checked ? e.target.parentElement.classList.add(cl.checkbox) : e.target.parentElement.classList.remove(cl.checkbox)\r\n    }\r\n\r\n    const delItem = (e) => {\r\n        setTodoItems(todoItems.filter(item => (String(item.id) !== String(e.target.id))))\r\n    }\r\n\r\n    return (\r\n        <div className = {cl.main}>\r\n            TodoList\r\n            <form \r\n                className = {cl.header}\r\n                onSubmit={addNewItem}\r\n            >\r\n                <input\r\n                    value={addItem.title}\r\n                    type=\"text\" \r\n                    placeholder='Заметка' \r\n                    onChange = {e => setAddItem({...addItem, title: e.target.value})}\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    onClick = {() => setAddItem({...addItem, id: Date.now()})}\r\n                >\r\n                    ►\r\n                </button>\r\n            </form>\r\n            <ul className = {cl.todo}>\r\n                {todoItems.map(({ id, title, isChecked }) => (\r\n                  <TodoItem id={id} title={title} isChecked={isChecked} setTodoItems={setTodoItems} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList"]},"metadata":{},"sourceType":"module"}