{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\todoList\\\\my-app\\\\src\\\\components\\\\TodoList\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport cl from './TodoList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todoItems, setTodoItems] = useState([]);\n  const [addItem, setAddItem] = useState({\n    title: '',\n    id: ''\n  });\n\n  const addNewItem = e => {\n    e.preventDefault();\n\n    if (addItem.title !== '') {\n      setTodoItems([...todoItems, addItem]);\n      setAddItem({\n        title: '',\n        id: ''\n      });\n    }\n  };\n\n  const checked = e => {\n    e.target.checked ? e.target.parentElement.classList.add(cl.checkbox) : e.target.parentElement.classList.remove(cl.checkbox);\n  };\n\n  const delItem = e => {\n    setTodoItems(todoItems.filter(item => String(item.id) !== String(e.target.id)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cl.main,\n    children: [\"TodoList\", /*#__PURE__*/_jsxDEV(\"form\", {\n      className: cl.header,\n      onSubmit: addNewItem,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: addItem.title,\n        type: \"text\",\n        placeholder: \"\\u0417\\u0430\\u043C\\u0435\\u0442\\u043A\\u0430\",\n        onChange: e => setAddItem({ ...addItem,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => setAddItem({ ...addItem,\n          id: Date.now()\n        }),\n        children: \"\\u25BA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: cl.todo,\n      children: todoItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: item.id,\n            type: \"checkbox\",\n            onClick: checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), item.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: item.id,\n          onClick: delItem,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"ysot6ij4NFp1ke9prnoY0iM2T4s=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/React/todoList/my-app/src/components/TodoList/TodoList.jsx"],"names":["React","useState","cl","TodoList","todoItems","setTodoItems","addItem","setAddItem","title","id","addNewItem","e","preventDefault","checked","target","parentElement","classList","add","checkbox","remove","delItem","filter","item","String","main","header","value","Date","now","todo","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport  cl from './TodoList.module.css'\r\n\r\nconst TodoList = () => {\r\n    const [todoItems, setTodoItems] = useState([])\r\n    const [addItem, setAddItem] = useState({title : '', id : ''})\r\n\r\n    const addNewItem = (e) => {\r\n        e.preventDefault()\r\n        if(addItem.title !== '') {\r\n        setTodoItems([...todoItems, addItem])\r\n        setAddItem({title : '', id : ''})\r\n        }\r\n    }\r\n\r\n    const checked = (e) => {\r\n        e.target.checked ? e.target.parentElement.classList.add(cl.checkbox) : e.target.parentElement.classList.remove(cl.checkbox)\r\n    }\r\n\r\n    const delItem = (e) => {\r\n        setTodoItems(todoItems.filter(item => (String(item.id) !== String(e.target.id))))\r\n    }\r\n\r\n    return (\r\n        <div className = {cl.main}>\r\n            TodoList\r\n            <form \r\n                className = {cl.header}\r\n                onSubmit={addNewItem}\r\n            >\r\n                <input\r\n                    value={addItem.title}\r\n                    type=\"text\" \r\n                    placeholder='Заметка' \r\n                    onChange = {e => setAddItem({...addItem, title: e.target.value})}\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    onClick = {() => setAddItem({...addItem, id: Date.now()})}\r\n                >\r\n                    ►\r\n                </button>\r\n            </form>\r\n            <ul className = {cl.todo}>\r\n                {todoItems.map(item => (\r\n                    <li>\r\n                        <div>\r\n                            <input \r\n                                id = {item.id}\r\n                                type=\"checkbox\"\r\n                                onClick = {checked}\r\n                            />\r\n                            {item.title}\r\n                        </div>\r\n                        <button\r\n                            id = {item.id}\r\n                            onClick={delItem}\r\n                        >\r\n                        Delete\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList"]},"metadata":{},"sourceType":"module"}